#include "msp430.h"                     ; #define controlled include file

NAME    main                    ; module name

PUBLIC  main                    ; make the main label vissible
; outside this module
ORG     0FFFEh
DC16    init                    ; set reset vector to 'init' label

RSEG    CSTACK                  ; pre-declaration of segment
RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer

; 8 bites osszeadas

MOV.B #2,R4
MOV.B #3,R5
ADD.B R4,R5

; 16 bites osszeadas

MOV.W #5,R6
MOV.W #4,R7
ADD.W R6,R7

; 32 bites osszeadas

MOV.W #5,R8
MOV.W #6,R9

MOV.W #3,R10
MOV.W #7,R11

ADD.W R8,R10
ADDC.W R9,R11

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; 8 bites elojeles osszeadas

MOV.B #-2,R4
MOV.B #3,R5
ADD.B R4,R5

; 16 bites elojeles osszeadas

MOV.W #7,R6
MOV.W #-4,R7
ADD.W R6,R7

;32 bites elojeles osszeadas

MOV.W #5,R8
MOV.W #6,R9

MOV.W #3,R10
MOV.W #7,R11

ADD.W R8,R10
ADDC.W R9,R11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; 8 bites kivonas

MOV.B #5,R4
MOV.B #2,R5
SUB.B R5,R4

; 16 bites kivonas

MOV.W #5,R4
MOV.W #2,R5
SUB.W R5,R4

; 32 bites kivonas

MOV.W #1,R8
MOV.W #6,R9

MOV.W #3,R10
MOV.W #7,R11

SUB.W R9,R11
SUBC.W R8,R10

;;;;;;;;;;;;;;;;;;;;

; 8 bites elojeles kivonas

MOV.B #5,R4
MOV.B #-2,R5
SUB.B R5,R4

; 16 bites elojeles kivonas

MOV.W #-5,R4
MOV.W #2,R5
SUB.W R5,R4


; 32 bites elojeles kivonas

MOV.W #0x0001,R4
MOV.W #0x0006,R5

MOV.W #0x0003,R6
MOV.W #0x0007,R7

INV R7
INV R6

ADD #0x0001,R6
ADDC #0x0000, R7
ADD R7,R5
ADDC R6,R4

INV R4
INV R5
ADD #1, R4
ADDC #0, R5

JMP $                           ; jump to current location '$'
; (endless loop)
END
